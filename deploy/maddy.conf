# Maddy MTA Configuration for Newsletter Platform
# This configuration handles SMTP, DKIM signing, and bounce processing

# Global configuration
{
    hostname = "mail.{env.SENDING_DOMAIN}"
    primary_domain = "{env.SENDING_DOMAIN}"
    
    # TLS configuration
    tls = "tls://0.0.0.0:465"
    tls = "tls://0.0.0.0:587"
    
    # Submission port for authenticated sending
    submission = "tls://0.0.0.0:587"
    
    # Authentication for internal app use
    auth {
        plain /etc/maddy/credentials
    }
    
    # Storage
    storage = "sqlite3:///data/maddy.db"
    
    # Queue configuration
    queue = "memory"
    
    # Logging
    log {
        level = "info"
        output = "stdout"
        format = "json"
    }
    
    # Rate limiting
    limits {
        all rate 10 1s
        all concurrency 5
    }
}

# SMTP server on port 25
(smtp) tcp://0.0.0.0:25 {
    limits {
        all rate 10 1s
        all concurrency 5
    }
    
    # DKIM signing for outgoing emails
    dkim {
        domain {env.SENDING_DOMAIN}
        selector {env.DKIM_SELECTOR}
        key file /etc/maddy/dkim.key
    }
    
    # Process incoming emails (bounces, complaints)
    default_destination {
        deliver_to &local_routing
    }
}

# Submission server on port 587 (authenticated)
(submission) tls://0.0.0.0:587 {
    limits {
        all rate 5 1s
        all concurrency 3
    }
    
    # Require authentication
    auth {
        plain /etc/maddy/credentials
    }
    
    # DKIM signing for outgoing emails
    dkim {
        domain {env.SENDING_DOMAIN}
        selector {env.DKIM_SELECTOR}
        key file /etc/maddy/dkim.key
    }
    
    # Route to remote delivery
    default_destination {
        deliver_to &remote_queue
    }
}

# Local routing for bounces and complaints
(local_routing) {
    # Check if it's a bounce or complaint
    deliver_to &bounce_processor
}

# Bounce processing
(bounce_processor) {
    # Process bounces and send to application webhook
    deliver_to &bounce_webhook
}

# Bounce webhook to application
(bounce_webhook) {
    # Send bounces to application webhook
    webhook {
        url "http://app:8080/api/hooks/bounce"
        method "POST"
        headers {
            "Content-Type" "application/json"
            "X-Maddy-Source" "bounce-processor"
        }
        timeout "30s"
    }
}

# Remote delivery queue
(remote_queue) {
    destination {
        deliver_to &remote_smtp
    }
}

# Remote SMTP delivery
(remote_smtp) {
    limits {
        destination rate 5 1s
        destination concurrency 2
    }
    
    # Authentication methods for remote delivery
    mx_auth {
        dane
        mta_sts
    }
    
    # Delivery configuration
    delivery {
        retry_after "1h"
        max_retries 3
        bounce_after "24h"
    }
}

# Policy configuration
(policy) {
    # SPF checking
    spf {
        check_early
        fail_action "reject"
    }
    
    # DMARC checking
    dmarc {
        check_early
        fail_action "quarantine"
    }
    
    # DKIM verification
    dkim {
        verify
    }
}

# Address rewriting for VERP
(address_rewrite) {
    # Rewrite return-path for bounce tracking
    rewrite {
        from "bounce-{id}@{env.SENDING_DOMAIN}"
        to "bounce@{env.SENDING_DOMAIN}"
    }
}
