# Production Docker Compose for Newsletter Platform
version: '3.8'

services:
  # Reverse Proxy with TLS
  proxy:
    image: caddy:2-alpine
    container_name: newsletter-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    environment:
      - APP_DOMAIN=${APP_DOMAIN}
      - SENDING_DOMAIN=${SENDING_DOMAIN}
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - newsletter-network

  # Newsletter Application
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: newsletter-app
    environment:
      - DATABASE_URL=sqlite:///var/app/newsletter.db
      - PORT=8080
      - LICENSE_KEY=${LICENSE_KEY}
      - SMTP_HOST=mta
      - SMTP_PORT=587
      - SMTP_USERNAME=${SMTP_USERNAME:-newsletter}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - DKIM_SELECTOR=${DKIM_SELECTOR:-newsletter}
      - DKIM_PRIVATE_KEY=${DKIM_PRIVATE_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - app-data:/var/app
    restart: unless-stopped
    depends_on:
      - mta
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - newsletter-network

  # Mail Transfer Agent (MTA)
  mta:
    image: foxcpp/maddy:latest
    container_name: newsletter-mta
    volumes:
      - ./deploy/mta:/data
      - ./deploy/maddy.conf:/etc/maddy/maddy.conf
      - ./deploy/credentials:/etc/maddy/credentials
      - ./deploy/dkim.key:/etc/maddy/dkim.key
    environment:
      - SENDING_DOMAIN=${SENDING_DOMAIN}
      - DKIM_SELECTOR=${DKIM_SELECTOR:-newsletter}
    restart: unless-stopped
    ports:
      - "25:25"   # SMTP
      - "587:587" # Submission
    healthcheck:
      test: ["CMD", "maddy", "ctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - newsletter-network

  # Optional: MailHog for development/testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: newsletter-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    restart: unless-stopped
    networks:
      - newsletter-network
    profiles:
      - dev

volumes:
  app-data:
    driver: local
  caddy-data:
    driver: local
  caddy-config:
    driver: local

networks:
  newsletter-network:
    driver: bridge