# Simple Dockerfile for testing
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev

WORKDIR /app

# Copy go mod files
COPY go.mod ./
COPY go.sum* ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN go mod tidy && CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o newsletter ./cmd/server

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates sqlite gcc musl-dev

# Create app user
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Create app directory
RUN mkdir -p /var/app && chown -R appuser:appgroup /var/app

# Copy binary from builder stage
COPY --from=builder /app/newsletter /usr/local/bin/newsletter

# Copy static files
COPY --from=builder /app/static /var/app/static

# Copy migrations
COPY --from=builder /app/migrations /var/app/migrations

# Set working directory
WORKDIR /var/app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Run the application
CMD ["newsletter"]
